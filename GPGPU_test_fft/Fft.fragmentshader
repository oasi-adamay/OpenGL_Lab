#version 330 core
precision highp float;
uniform sampler2DRect	texSrc0;
uniform sampler2DRect	texSrc1;
uniform  int fft_N;
uniform  int fft_stride;
uniform  int fft_p;
uniform  int fft_q;
layout (location = 0) out vec2 dst0;
layout (location = 1) out vec2 dst1;

#define M_PI 3.1415926535897932384626433832795

int insertZeroBits(
	const int src,
	const int idx,
	const int num
	)
{
	int ret = src << num;
	ret &= ~((1 << (idx + num)) - 1);
	ret |= src & ((1 << idx) - 1);
	return ret;
}

void main(void)
{
	int p = fft_p;
	int q = fft_q;
	int N = fft_N;

	int n;
	vec2 x0;
	vec2 x1;
	vec2 w;


	if(fft_stride==1){
		n= int(gl_FragCoord.x);
		int iw = (n >> q) << q;
		int ix0 = insertZeroBits(n, q, 1);
		int ix1 = ix0 + (1 << q);

		if(ix0 < N/2) x0 = texture(texSrc0,vec2(ix0,gl_FragCoord.y)).rg;
		else x0 = texture(texSrc1,vec2(ix0-N/2,gl_FragCoord.y)).rg;

		if(ix1 < N/2) x1 = texture(texSrc0,vec2(ix1,gl_FragCoord.y)).rg;
		else x1 = texture(texSrc1,vec2(ix1-N/2,gl_FragCoord.y)).rg;

		float jw = (-2.0 * M_PI * iw / N);
		w.r = cos(jw);
		w.g = sin(jw);
	
	}
	else{
		n= int(gl_FragCoord.y);
		int iw = (n >> q) << q;
		int ix0 = insertZeroBits(n, q, 1);
		int ix1 = ix0 + (1 << q);

		if(ix0 < N/2) x0 = texture(texSrc0,vec2(gl_FragCoord.x,ix0)).rg;
		else x0 = texture(texSrc1,vec2(gl_FragCoord.x,ix0-N/2)).rg;

		if(ix1 < N/2) x1 = texture(texSrc0,vec2(gl_FragCoord.x,ix1)).rg;
		else x1 = texture(texSrc1,vec2(gl_FragCoord.x,ix1-N/2)).rg;

		float jw = (-2.0 * M_PI * iw / N);
		w.r = cos(jw);
		w.g = sin(jw);

	}


	vec2 tmp;
	tmp.r = x1.r * w.r - x1.g * w.g;
	tmp.g = x1.r * w.g + x1.g * w.r;

	vec2 y0;
	vec2 y1;

	y0 = x0 + tmp;
	y1 = x0 - tmp;

	dst0 = y0;
	dst1 = y1;
//	dst0 = vec2(0.1,0.2);
//	dst1 = vec2(0.3,0.4);

}
